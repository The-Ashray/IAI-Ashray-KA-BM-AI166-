import copy

pacman_x, pacman_y = map(int, input().split())
food_x, food_y = map(int, input().split())
n, m = map(int, input().split())

grid = [list(input().strip()) for _ in range(n)]
directions = [[-1, 0], [0, -1], [0, 1], [1, 0]]

node_expanded = []
queue = [[pacman_x, pacman_y, []]]
answer_routes = None

while queue:
    x, y, r = queue.pop(0)
    routes = r + [[x, y]]

    node_expanded.append([x, y])

    if x == food_x and y == food_y:
        answer_routes = routes
        break

    for dx, dy in directions:
        next_x, next_y = x + dx, y + dy
        if 0 <= next_x < n and 0 <= next_y < m and (grid[next_x][next_y] == '-' or grid[next_x][next_y] == '.'):
            grid[next_x][next_y] = '='
            queue.append([next_x, next_y, routes])

print(len(node_expanded))
for point in node_expanded:
    print(f"{point[0]} {point[1]}")

print(len(answer_routes) - 1)
for point in answer_routes:
    print(f"{point[0]} {point[1]}")
